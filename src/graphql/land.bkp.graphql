# Hey Emacs, this is -*- coding: utf-8 -*-

"How element comes into existence in Artizanya"
enum ElementGenesis {
  """
  Native to Artizanya land
  Produced from other Artizanya elements.
  """
  NATIVE

  """
  Foreign to Artizanya land
  Acquired from a third party suppler such as shop or manufacturer.
  """
  FOREIGN

  """
  Natural to the universe
  Acquired directly from the nature.
  """
  NATURAL
}

"Role in the project tree"
enum ElementRole {
  "Part of other elements"
  PART

  "Consumable material in elements production"
  CONSUMABLE

  "Instrument used in elements production"
  INSTRUMENT

  "Byproduct"
  BYPRODUCT

  "Final product"
  FINAL
}

interface Element {
  id: String!
  name: String
  genesis: ElementGenesis!
  role: ElementRole!
  process: Process!
  alternatives: [Process]!
}

type NativeElement implements Element {
  id: String!
  name: String
  genesis: ElementGenesis!
  role: ElementRole!
  path: String!
}

type ForeignElement implements Element {
  id: String!
  name: String
  genesis: ElementGenesis!
  role: ElementRole!
  vendor: String!
  product: String!
}

type NaturalElement implements Element {
  id: String!
  name: String
  genesis: ElementGenesis!
  role: ElementRole!
  method: String!
}

interface Component {
  id: String!
  element: Element!
  count: Int!
  variants: [Element]!
}

interface Process {
  id: String!
  input: [Component]!
  output: [Component!]!
}

type AssembleProcess implements Process {
  id: String!
  input: [Element]!
  output: [NativeElement!]!
}

type PurchaseOnlineProcess implements Process {
  id: String!
  store: String!
  output: [Element!]!
}

interface Logistics {
  id: String!
}

type DeliveryOnlineLogistics implements Logistics {
  id: String!
}

